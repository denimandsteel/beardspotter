<div class="container">
  <% if(typeof total !== 'undefined') { %>
  <h2 class="highlight">Good Work</h2>
  <h3>You reported <span class="total"><%= total %></span> <% if (total === 1) { %>beard<% } else { %>beards<% } %>.</h3>
  <% } else { %>
  <h2 class="highlight">Sightings</h2>
  <% } %>
  <div id="map">
  <% for (var i = 0; i < sightings.length; i++) { %>
    <% if (sightings[i].latitude != '' && sightings[i].longitude != '') { %>
    <div id="sighting-<%= sightings[i].id %>-marker" class="marker<% if (i === 0){ %> highlight<% } %>" data-lat="<%= sightings[i].latitude %>" data-lon="<%= sightings[i].longitude %>"><div class="pulse"></div></div>
    <% } %>
  <% } %>
  </div>
</div>
<div id="sightings" class="flexslider-container">
  <div class="flexslider">
    <ul class="slides">
      <% for (var i = 0; i < sightings.length; i++) { %>
      <% if (typeof sightings[i].beards === 'object') { %>
      <li id="sighting-<%= sightings[i].id %>" class="sighting">
        <div class="sighting-wrap">
          <% for (var beard in sightings[i].beards) { %>
            <% if (sightings[i].beards[beard] > 0) { %>
            <div id="<%= beard %>" class="beard">
              <div class="icon">
                <div class="count"><%= sightings[i].beards[beard] %></div>
              </div>
              <div class="name"><%= humanReadable[beard] %></div>
            </div>
            <% } %>
          <% } %>
          <div class="meta">
            <div><strong>Spotted by</strong> <%= sightings[i].nickname %></div>
            <div><strong>Near</strong> <%= parseFloat(sightings[i].latitude).toFixed(2) %>, <%= parseFloat(sightings[i].longitude).toFixed(2) %></div>
            <% var date = new Date(sightings[i].posted); %>
            <div><strong>At</strong> <%= date.getHours() %>:<%= (date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes())  %> <strong>on</strong> <%= date.getDate() %>/<%= date.getMonth() + 1 %>/<%= date.getFullYear() %></div>
          </div>
        </div>
      </li>
      <% } %>
      <% } %>
    </ul>
  </div>
</div>

<script src="/modestmaps.min.js"></script>
<script src="/modestmaps.markers.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
<script src="/jquery.flexslider-min.js"></script>

<script>
function NoClickDelay(el) {
  this.element = el;
  if( window.Touch ) this.element.addEventListener('touchstart', this, false);
}

NoClickDelay.prototype = {
  handleEvent: function(e) {
    switch(e.type) {
      case 'touchstart': this.onTouchStart(e); break;
      case 'touchmove': this.onTouchMove(e); break;
      case 'touchend': this.onTouchEnd(e); break;
    }
  },

  onTouchStart: function(e) {
    e.preventDefault();
    this.moved = false;

    this.element.addEventListener('touchmove', this, false);
    this.element.addEventListener('touchend', this, false);
  },

  onTouchMove: function(e) {
    this.moved = true;
  },

  onTouchEnd: function(e) {
    this.element.removeEventListener('touchmove', this, false);
    this.element.removeEventListener('touchend', this, false);

    if( !this.moved ) {
      var theTarget = document.elementFromPoint(e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      if(theTarget.nodeType == 3) theTarget = theTarget.parentNode;

      var theEvent = document.createEvent('MouseEvents');
      theEvent.initEvent('click', true, true);
      theTarget.dispatchEvent(theEvent);
    }
  }
};

var markers = document.getElementsByClassName('marker');
var imageXOffSet = 0;
var imageYOffSet = 0;
var imageWidth = 280;
var imageHeight = 280;
var YPixelsToRadiansRatio = (imageHeight) / (2 * Math.PI);

/* With help from:
   - http://stackoverflow.com/questions/2651099/convert-long-lat-to-pixel-x-y-on-a-given-picure
   - http://mathworld.wolfram.com/MercatorProjection.html
   - https://github.com/mapbox/node-sphericalmercator/blob/b900d1ea7a6ca656d3c85c3bfb4f0fe625bfd4bf/sphericalmercator.js#L43
*/

var latToPixels = function(lat) {
  var f = Math.sin(lat * (Math.PI / 180));
  return ((imageHeight / 2) + 0.5 * Math.log((1 + f) / (1 - f)) * -1 * YPixelsToRadiansRatio) + imageYOffSet
}

var lonToPixels = function(lon) {
  return (((lon + 180) / 360) * imageWidth) + imageXOffSet
}

for (var i = 0; i < markers.length; i++) {
  markers[i].style.top  = latToPixels(parseFloat(markers[i].dataset.lat)) + 'px';
  markers[i].style.left = lonToPixels(parseFloat(markers[i].dataset.lon)) + 'px';
}

$(window).load(function() {
  $('.flexslider').flexslider({
    animation: "slide",
    slideshow: false,
    controlNav: false,
    directionNav: false,
    animationDuration: 80,
    animationLoop: false,
    controlsContainer: ".flexslider-container",
    after: function(slider) {
      // Highlight currently viewed slide on map.
      $('#map .marker.highlight').removeClass('highlight');
      $('#' + slider.slides.eq(slider.currentSlide).attr('id') + '-marker').addClass('highlight');;
    }
  }).load(function() {
    window.scrollTo(0,0);
    alert('hi');
  });
});
</script>
